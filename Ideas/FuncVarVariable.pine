//@version=5
indicator("FunctionVarVariable", shorttitle = "FuncVarVar")

// AIM
// I want to understand how var-variables behave within a function.
// I cannot see this addressed within the official Pine Script doco at:
// - https://www.tradingview.com/pine-script-docs/en/v5/language/Variable_declarations.html#var
// - https://www.tradingview.com/pine-script-reference/v5/#op_var
// but there is an example where the function is invoked twice at:
// - https://www.pinecoders.com/faq_and_code/#how-can-i-rescale-an-indicator-from-one-scale-to-another
//
// LESSON
// Difficult to learn any lessons here except perhaps "don't use
// local var-variables within a function"?

//////////////////////////////////////////////////////////////////////////////
DEBUG = true

//////////////////////////////////////////////////////////////////////////////
// Functions
persistentLocalCounter(msg="") =>
    var countHowMany = 0    // Initialized once... the first time the local block is executed if the declaration is inside a local block
    incr = if DEBUG
        if msg == "333"
            3
        else if msg == "222"
            2
        else
            1
        
    else                    // Not DEBUG implies "increment by 1"
        1

    countHowMany += incr    // Seems to have 3 copies of local "var countHowMany". Why? Undocumented?
                            // I.e. one copy for each time-per-bar we invoke this function from Main.
    log.info("{0} | bar_index: {1,number,0} | countHowMany = {2,number,0}", msg, bar_index, countHowMany)

//////////////////////////////////////////////////////////////////////////////
// Main
if bar_index > 0 and bar_index < 5
    persistentLocalCounter(DEBUG ? "111" : "")
    persistentLocalCounter(DEBUG ? "222" : "")
    persistentLocalCounter(DEBUG ? "333" : "")

